from flask import Flask, request, jsonify
from pymongo import MongoClient
import time

app = Flask(__name__)
connection = MongoClient()
db = connection.inventory #database name.
collection = db['products'] # collection name.
collection1 = db['income']    # collection name

@app.route('/add',methods=['POST'])
def add():
      jsondata=request.get_json()
      d = {}
      d1={}
      for key, values in jsondata.items():
          d['pname'] = key
          for k, v in values.items():
              d[k] = v

      for i,j in d.items():
          if i=='qty':
              continue
          else:
              d1[i]=j
      print d1
      s=list(collection.find(d1))
      print s
      if  s:
        print "up "
        collection.update(d1,{"$inc":{"qty":d['qty']}})
        result = "it is updated"
        return jsonify(result)
      else:
        collection.insert(d)
        result = "successfully inserted"
        return jsonify(result)



@app.route('/search',methods=['POST'])
def search():
     data = request.get_json()
     print data

     d1 ={}


     for j, k in data.items():
         if(type(k) == type(d1)):
           d = {}
           for key,values in data.items():
              d['pname'] = key
              for k, v in values.items():
                   d[k] = v
           result=list(collection.find(d,{"_id":0}))

         else:
           result = list(collection.find(data, {"_id": 0}))
     return jsonify(result)
@app.route('/buy',methods=['POST'])
def buy():
    data = request.get_json()
    print data
    d = {}
    d1={}
    for key, values in data.items():
        d['pname'] = key
        d1['pname']=key
        for k, v in values.items():
            if k=='qty':
             d[k] ={"$gte":v}
             d1[k]=v
            else:
             d[k]=v
             d1[k]=v
        print d
    a = time.strftime('%Y-%m-%d')
    s1 = list(collection.find(d))
    #print s1
    if s1:
        collection.update({'pname': d['pname']}, {'$inc': {'qty':-d1['qty']}})
        collection1.insert({'pname':d1['pname'], "qty": d1['qty'], "price": d1['price'] * d1['qty'], "date": a})
        result="successfully"
        return jsonify(result)
    else:
        result = list(collection.find({"pname": d['pname']},{"_id": 0}))
        return jsonify(result)


@app.route('/money',methods=['POST'])
def money():
      f=request.get_json()
      a = time.strftime('%Y-%m-%d')

      s=f.values()[0]


      s1=list(collection1.find(s,{"_id":0}))
      if s1:
          prices_sum = 0
          for i in range(0,len(s1)):
                prices_sum += s1[i]['price']
          return jsonify(prices_sum,s1)

      else:
          result="no transactions today"
          return jsonify(result)

if __name__ == '__main__':
   app.run(debug = True)